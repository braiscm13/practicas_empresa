/*
 * Tachograph File Archive Access meta data about about stored tachograph files, download and upload tachograph files The version of the OpenAPI document: 1.1.5 Contact:
 * team_tachograph_remote_download@rio.cloud NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

package com.opentach.server.remotevehicle.provider.man.client.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * FileMetadataResponse
 */
@JsonPropertyOrder({ FileMetadataResponse.JSON_PROPERTY_ITEMS, FileMetadataResponse.JSON_PROPERTY_COUNT, FileMetadataResponse.JSON_PROPERTY_TOTAL_COUNT, FileMetadataResponse.JSON_PROPERTY_PAGINATION })
public class FileMetadataResponse {
	public static final String		JSON_PROPERTY_ITEMS			= "items";
	private List<FileMetadataModel>	items						= null;

	public static final String		JSON_PROPERTY_COUNT			= "count";
	private Integer					count;

	public static final String		JSON_PROPERTY_TOTAL_COUNT	= "total_count";
	private Integer					totalCount;

	public static final String		JSON_PROPERTY_PAGINATION	= "pagination";
	private PaginationModel			pagination;

	public FileMetadataResponse items(List<FileMetadataModel> items) {

		this.items = items;
		return this;
	}

	public FileMetadataResponse addItemsItem(FileMetadataModel itemsItem) {
		if (this.items == null) {
			this.items = new ArrayList<>();
		}
		this.items.add(itemsItem);
		return this;
	}

	/**
	 * Get items
	 *
	 * @return items
	 **/
	@JsonProperty(FileMetadataResponse.JSON_PROPERTY_ITEMS)
	@JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
	public List<FileMetadataModel> getItems() {
		return this.items;
	}

	public void setItems(List<FileMetadataModel> items) {
		this.items = items;
	}

	/**
	 * Get count
	 *
	 * @return count
	 **/
	@JsonProperty(FileMetadataResponse.JSON_PROPERTY_COUNT)
	@JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
	public Integer getCount() {
		return this.count;
	}

	/**
	 * Get totalCount
	 *
	 * @return totalCount
	 **/
	@JsonProperty(FileMetadataResponse.JSON_PROPERTY_TOTAL_COUNT)
	@JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
	public Integer getTotalCount() {
		return this.totalCount;
	}

	public FileMetadataResponse pagination(PaginationModel pagination) {

		this.pagination = pagination;
		return this;
	}

	/**
	 * Get pagination
	 *
	 * @return pagination
	 **/
	@JsonProperty(FileMetadataResponse.JSON_PROPERTY_PAGINATION)
	@JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
	public PaginationModel getPagination() {
		return this.pagination;
	}

	public void setPagination(PaginationModel pagination) {
		this.pagination = pagination;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if ((o == null) || (this.getClass() != o.getClass())) {
			return false;
		}
		FileMetadataResponse fileMetadataResponse = (FileMetadataResponse) o;
		return Objects.equals(this.items, fileMetadataResponse.items) && Objects.equals(this.count, fileMetadataResponse.count) && Objects.equals(this.totalCount,
				fileMetadataResponse.totalCount) && Objects.equals(this.pagination, fileMetadataResponse.pagination);
	}

	@Override
	public int hashCode() {
		return Objects.hash(this.items, this.count, this.totalCount, this.pagination);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class FileMetadataResponse {\n");
		sb.append("    items: ").append(this.toIndentedString(this.items)).append("\n");
		sb.append("    count: ").append(this.toIndentedString(this.count)).append("\n");
		sb.append("    totalCount: ").append(this.toIndentedString(this.totalCount)).append("\n");
		sb.append("    pagination: ").append(this.toIndentedString(this.pagination)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

}
